plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.epages.restdocs-api-spec' version '0.18.4'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id "com.diffplug.spotless" version "6.11.0"
}

group = 'aladdinsys.api'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.google.code.gson:gson:2.8.5'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.4'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

openapi3 {
    servers = [
            { url = 'http://localhost:8080' }
    ]
    title = 'Service API'
    description = 'API description'
    version = '1.0.0'
    format = 'json'
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test

    sources{
        include("**/index.adoc","**/*.adoc")
    }

    baseDirFollowsSourceFile()
}


asciidoctor.doFirst {
    delete file("src/main/resources/static/docs")
}

bootJar {
    dependsOn asciidoctor
    finalizedBy('copyDocument')
}

task copyDocument(type: Copy) {
    dependsOn bootJar
    from layout.buildDirectory.dir('docs/asciidoc').get().asFile
    into file("src/main/resources/static/docs")
}

tasks.named('test', Test) {
    outputs.dir snippetsDir
    useJUnitPlatform()
}
//spotless {
//    java {
//        target fileTree(dir: 'src/main/java', include: '**/*.java')
//        //googleJavaFormat()
//        removeUnusedImports()
//        importOrder()
//
//        licenseHeader '/* (C) $YEAR AladdinSystem License */' // or licenseHeaderFile
//    }
//}



